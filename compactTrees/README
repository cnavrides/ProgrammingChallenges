https://zulily.interviewstreet.com/challenges/dashboard/#problem/4fd2da3b76ec7

Let us call a tree compact if the sum of the distances between all pairs of nodes in the tree is at most D. You are given a tree having N nodes. You need to count how many subtrees of the given tree are compact.

Note: A tree is a connected graph having N nodes and N - 1 edges. A subtree of a tree T contains a subset S of the nodes of T with the property that all nodes on the path between any two nodes in S also belong to S.


Input :
The first line contains the number of test cases T.
T test cases follow. For each test case, the first line contains N and D. The following N - 1 lines contain two integers ai and bi, indicating an edge between nodes ai and bi. The nodes are 0-indexed. There is a blank line after each test case.

Output :
Output T lines, one corresponding to each test case, containing the required answer.

Constraints :
1 <= T <= 10
2 <= N <= 50
0 <= ai,bi < N
1 <= D <= 100

Sample Input :
2
3 3
0 1
1 2

6 4
0 1
1 2
2 3
2 4
3 5


Sample Output :
5
16

Explanation:
For the first case, the following subtrees are compact: {0},{1},{2},{0,1},{1,2}. Note that the subtree {0,1,2} is not compact as the sum of the distances between nodes in this subtree is 4.
